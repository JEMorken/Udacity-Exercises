geom_freqpoly(binwidth = .1, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
ggplotly(g2)
g2 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .5, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
ggplotly(g2)
g2 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .5, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
g3 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .5, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
g4 <- grid.arrange(g2,g3,ncol = 2)
ggplotly(g4)
g2 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .5, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
g3 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .1, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
g4 <- grid.arrange(g2,g3)
ggplotly(g4)
g2 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .5, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
g3 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .1, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
grid.arrange(ggplotly(g2),ggplotly(g3),ncol = 2)
plot_ly(data = diamonds,type = polygon(x = carat))
plot_ly(data = diamonds,type = polygon(x = diamonds$carat))
g2 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .5, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
g3 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .1, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
ggplotly(g2)
ggplotly(g3)
ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .5, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.5)) +
ylab("# of Diamonds")
ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .5, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .5, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.5)) +
ylab("# of Diamonds")
ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .1, colour = "darkgreen") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.1)) +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
2 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .5, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.5)) +
ylab("# of Diamonds")
g3 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .1, colour = "darkgreen") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.1)) +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
ggplotly(g2)
g2 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .5, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.5)) +
ylab("# of Diamonds")
(ggplotly(g2))
(ggplotly(g3))
g2 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .5, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.5)) +
theme_economist_white()+
ylab("# of Diamonds")
g3 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .1, colour = "darkgreen") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.1)) +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
(ggplotly(g2))
g2 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .5, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.5)) +
theme_few()+
ylab("# of Diamonds")
g3 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .1, colour = "darkgreen") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.1)) +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
(ggplotly(g2))
ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .5, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.5)) +
theme_pander()+
ylab("# of Diamonds")
g3 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .1, colour = "darkgreen") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.1)) +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
(ggplotly(g2))
g2 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .5, colour = "darkgreen") +
xlab("Carat (i.e. Weight)") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.5)) +
theme_stata()+
ylab("# of Diamonds")
g3 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .1, colour = "darkgreen") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.1)) +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
(ggplotly(g2))
g2 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .5, colour = "darkgreen") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.5)) +
theme_stata()+
ylab("# of Diamonds") +
xlab("Carat (i.e. Weight)")
g3 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .1, colour = "darkgreen") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.1)) +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
(ggplotly(g2))
g2 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .5, colour = "darkgreen") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.5)) +
ylab("# of Diamonds") +
xlab("Carat (i.e. Weight)")
g3 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .1, colour = "darkgreen") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.1)) +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
(ggplotly(g2))
g3 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .1, colour = "darkgreen") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.1)) +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
(ggplotly(g2))
(ggplotly(g3))
g3 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .1, colour = "darkgreen") +
scale_x_continuous(limits = c(0,5),breaks = seq(0.5,5,.1)) +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
(ggplotly(g2))
(ggplotly(g3))
g3 <- ggplot(data = diamonds, aes(x = carat)) +
geom_freqpoly(binwidth = .1, colour = "darkgreen") +
scale_x_continuous(limits = c(0,5),breaks = seq(0,5,.1)) +
xlab("Carat (i.e. Weight)") +
ylab("# of Diamonds")
(ggplotly(g2))
(ggplotly(g3))
library(ggplot2)
library(plotly)
getwd()
read.csv("D:/Users/Jonathan Morken/Documents/GitHub/Udacity-Exercises/indicator Patent applications.csv")
read.csv(""indicator Patent applications.csv")
read.csv("indicator Patent applications.csv")
read.csv(indicator Patent applications.csv)
PatentData <- read.csv(file="D:/Users/Jonathan Morken/Documents/GitHub/Udacity-Exercises/indicator Patent applications.csv")
PatentData <- read.csv(file="D:/Users/Jonathan Morken/Documents/GitHub/Udacity-Exercises/indicator Patent applications")
library(readr)
PatentData <- read.csv(file="D:/Users/Jonathan Morken/Documents/GitHub/Udacity-Exercises/indicator Patent applications.csv")
PatentData <- read.csv(file="D:/Users/Jonathan Morken/Documents/GitHub/Udacity-Exercises/indicator Patent applications")
PatentData <- read.csv(file="D:/Users/Jonathan Morken/Documents/GitHub/Udacity-Exercises/indicator Patent applications.csv", header=TRUE, sep=",")
read_csv("indicator Patent applications.csv"")
read_csv("indicator Patent applications.csv")
read_csv("indicator Patent applications")
read_csv("Patentapplications")
read_csv("Patentapplications.csv")
read_csv("Patentapplications.csv")
read_csv("Patentapplications.csv")
read_csv(Patentapplications.csv)
PatentData <- read_csv(Patentapplications.csv)
PatentData <- read_csv("Patentapplications.csv"")
PatentData <- read_csv("Patentapplications.csv")
pf <- read.csv('pseudo_facebook.tsv',sep = '\t')
pf
View pf
View(pf)
qplot(x = age, y = friend_count, data = pf)
library(plotly)
ggplot(data = pf, aes(age, friend_count))+
geom_point()
g1 <- ggplot(data = pf, aes(age, friend_count))+
geom_point()
ggplotly(g1)
(ggplotly(g1))
summary(pf$age)
g1 <- ggplot(data = pf, aes(x = age, y = friend_count))+
geom_point() +
xlim(13,90)
g1
g1 <- ggplot(data = pf, aes(x = age, y = friend_count))+
geom_point(alpha = 1/20) +
xlim(13,90)
g1
g1 <- ggplot(data = pf, aes(x = age, y = friend_count))+
geom_jitter(alpha = 1/20) +
xlim(13,90)
g1
g1 <- ggplot(data = pf, aes(x = age, y = friend_count))
g1 + geom_point(alpha = 1/20) +
xlim(13,90)
g1
g1
g1 + geom_point(alpha = 1/20) +
xlim(13,90)
g1 + geom_jitter(alpha = 1/20) +
xlim(13,90)
g1 + coord_trans(y = "sqrt", limx = c(13,90))
g1 + geom_jitter(alpha = 1/20) +
coord_trans(y = "sqrt", limx = c(13,90))
g1 + geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
g1 + geom_point(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
g1 + geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
g1 + geom_point(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
g1 + geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13,90) +
coord_trans(y = "sqrt")
g2 <- ggplot(data = pf,aes(x = age,y = friendships_initiated)) +
geom_point()
g2
g2 + geom_point(alpha = 1/20) +
xlim(13,90)
g2 + geom_point(alpha = 1/20) +
xlim(13,90, position = position_jitter(h = 0))
g2 + geom_point(alpha = 1/20) +
xlim(13,90, position = position_jitter(h = 0)) +
coord_trans(y = "sqrt")
g2 + geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13,90) +
coord_trans(y = "sqrt")
str(pf)
library(dplyr)
age_groups <- group_by(pf,age)
summarise(age_groups)
summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()
summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
head(pf.fc_by_age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age <- arrange(pf.fc_by_age,age)
head(pf.fc_by_age)
pf.fc_by_age2 <- pf %>%
group_by(age) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age)
head(pf.fc_by_age2)
head(pf.fc_by_age2,20)
ggplot(data = pf.fc_by_age,aes(x = age, y = friend_count_mean))+
geom_line()
g1 + geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13,90) +
coord_trans(y = "sqrt")
g1 + geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "Orange") +
xlim(13,90) +
coord_trans(y = "sqrt")
g1 + geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "Orange") +
xlim(13,90) +
coord_trans(y = "sqrt") +
geom_line(state = 'Summary', fun.y = mean)
g1 + geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "Orange") +
xlim(13,90) +
coord_trans(y = "sqrt") +
geom_line(stat = 'Summary', fun.y = mean)
g1 + geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "Orange") +
xlim(13,90) +
coord_trans(y = "sqrt") +
geom_line(stat = 'Summary', fun.y = mean) +
geom_line(stat = 'Summary', fun.y = quantile, probs = .1)
g1 + geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "Orange") +
coord_trans(y = "sqrt",xlim = c(13, 90)) +
geom_line(stat = 'Summary', fun.y = mean) +
geom_line(stat = 'Summary', fun.y = quantile, fun.args = list(probs = .9))
g1 + geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "Orange") +
coord_cartesian(y = "sqrt",xlim = c(13, 90)) +
geom_line(stat = 'Summary', fun.y = mean) +
geom_line(stat = 'Summary', fun.y = quantile, fun.args = list(probs = .9))
g1 + geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "Orange") +
coord_cartesian(y = "sqrt",xlim = c(13, 90)) +
geom_line(stat = 'Summary', fun.y = mean) +
geom_line(stat = 'Summary', fun.y = quantile, fun.args = list(probs = .9))
g1 + geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "Orange") +
xlim(13,90) +
coord_trans(y = "sqrt",xlim = c(13, 90)) +
geom_line(stat = 'Summary', fun.y = mean) +
geom_line(stat = 'Summary', fun.y = quantile, fun.args = list(probs = .9))
g1 + geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "Orange") +
xlim(13,90) +
coord_trans(y = "sqrt") +
geom_line(stat = 'Summary', fun.y = mean) +
geom_line(stat = 'Summary', fun.y = quantile, fun.args = list(probs = .9))
g1 + geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "Orange") +
xlim(13,90) +
coord_trans(y = "sqrt") +
geom_line(stat = 'Summary', fun.y = mean) +
geom_line(stat = 'Summary', fun.y = quantile, fun.args = list(probs = .9)) +
geom_line(stat = 'Summary', fun.y = quantile, fun.args = list(probs = .1))
g1 + geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "Orange") +
xlim(13,90) +
coord_trans(y = "sqrt") +
geom_line(stat = 'Summary', fun.y = mean) +
geom_line(stat = 'Summary', fun.y = quantile, fun.args = list(probs = .9), linetype = 2, color = 'blue') +
geom_line(stat = 'Summary', fun.y = quantile, fun.args = list(probs = .1), linetype = 2, color = 'blue')
g1 + geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "Orange") +
coord_cartesian(xlim = c(13,90)) +
geom_line(stat = 'Summary', fun.y = mean) +
geom_line(stat = 'Summary', fun.y = quantile, fun.args = list(probs = .9), linetype = 2, color = 'blue') +
geom_line(stat = 'Summary', fun.y = quantile, fun.args = list(probs = .1), linetype = 2, color = 'blue')
g1 + geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "Orange") +
coord_cartesian(xlim = c(13,70),ylim = c(0,1000)) +
geom_line(stat = 'Summary', fun.y = mean) +
geom_line(stat = 'Summary', fun.y = quantile, fun.args = list(probs = .9), linetype = 2, color = 'blue') +
geom_line(stat = 'Summary', fun.y = quantile, fun.args = list(probs = .1), linetype = 2, color = 'blue')
cor.test(pf$age,pf$friend_count)
?cor.test
cor.test(pf$age,pf$friend_count,method = "pearson")
with(pf, cor.test(age, friend_count))
with(subset(pf,age < 71), cor.test(age, friend_count))
with(subset(pf,age <= 70), cor.test(age, friend_count))
ggplot(data = pf,aes(x = likes_received, y = www_likes_received)) +
geom_point()
ggplot(data = pf,aes(y = likes_received, x = www_likes_received)) +
geom_point()+
xlim(0,25000) +
ylim(0,50000)
ggplot(data = pf,aes(y = likes_received, x = www_likes_received)) +
geom_point()+
xlim(0,25000) +
ylim(0,50000) +
coord_trans(y = "log10", x = "log10" )
ggplot(data = pf,aes(y = likes_received, x = www_likes_received)) +
geom_point()+
xlim(0,25000) +
ylim(0,50000) +
coord_trans(y = "sqrt", x = "sqrt" )
ggplot(data = pf,aes(y = likes_received, x = www_likes_received)) +
geom_point()+
xlim(0,quantile(pf$www_likes_received,.95)) +
ylim(0,quantile(pf$www_likes_received,.95))
ggplot(data = pf,aes(y = likes_received, x = www_likes_received)) +
geom_point()+
xlim(0,quantile(pf$www_likes_received,0.95)) +
ylim(0,quantile(pf$www_likes_received,0.95))
ggplot(data = pf,aes(y = likes_received, x = www_likes_received)) +
geom_point()+
xlim(0,quantile(pf$www_likes_received,0.95)) +
ylim(0,quantile(pf$www_likes_received,0.95)) +
geom_smooth(method = "lm", color = "red")
ggplot(data = pf,aes(y = likes_received, x = www_likes_received)) +
geom_point()+
xlim(0,quantile(pf$www_likes_received,0.95)) +
ylim(0,quantile(pf$likes_received,0.95)) +
geom_smooth(method = "lm", color = "red")
cor.test(pf$www_likes_received,pf$likes_received,method = "pearson")
install.packages('alr3')
library(alr3)
data("Mitchell")
str("Mitchell")
str("Mitchell")
str(Mitchell)
ggplot(data = Mitchell,aes(x = Month, y = Temp)) +
geom_point()
View(Mitchell)
ggplot(data = Mitchell,aes(x = Month, y = Temp)) +
geom_point()+
geom_smooth(method = "lm")
cor.test(Mitchell$Temp,Mitchell$Temp)
cor.test(Mitchell$Temp,Mitchell$Temp, method = "Pearson")
cor.test(Mitchell$Temp,Mitchell$Temp, method = "pearson")
cor.test(Mitchell$Month,Mitchell$Temp, method = "pearson")
range(MItchell$Month)
range(Mitchell$Month)
ggplot(data = Mitchell,aes(x = Month, y = Temp)) +
geom_point()+
scale_x_discrete(breaks = seq(0,203,12))
ggplot(aes(x=(Month%%12),y=Temp),data=Mitchell)+
geom_point()
x <- seq(0, 4*pi, pi/20)
y <- cos(x)
qplot(x = x, y = y)
dcor.ttest(x, y)
install.packages("energy")
dcor.ttest(x, y)
library(energy)
dcor.ttest(x, y)
pf$age_with_months <- (pf$age + (1-month%%12))
pf$age_with_months <- (pf$age + (1-dob_month%%12))
pf$age_with_months <- (pf$age + (1-pf$dob_month%%12))
pf$age_with_months <- (pf$age + (1-(pf$dob_month%%12)/100)
pf$age_with_months <- (pf$age + (1-(pf$dob_month%%12)/100))
pf$age_with_months <- (pf$age + (1-(pf$dob_month/12)))
pf$age_with_months <- (pf$age + ((pf$dob_month/12)))
pf$age_with_months <- (pf$age + (1-(pf$dob_month/12)))
age_months_groups <- group_by(pf,age_with_months)
pf.fc_by_age_months <- summarise(age_months_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age <- arrange(pf.fc_by_age,age_with_months)
head(pf.fc_by_age_months)
View(pf.fc_by_age_months)
ggplot(data = subset(pf.fc_by_age_months,age_with_months < 70),eas(x = age_with_months,y = friend_count_mean)) +
geom_point()
ggplot(data = subset(pf.fc_by_age_months,age_with_months < 70),aes(x = age_with_months,y = friend_count_mean)) +
geom_point()
ggplot(data = subset(pf.fc_by_age_months,age_with_months < 70),aes(x = age_with_months,y = friend_count_mean)) +
geom_line() +
geom_line(stat = 'Summary', fun.y = mean) +
geom_line(stat = 'Summary', fun.y = quantile, fun.args = list(probs = .9), linetype = 2, color = 'blue') +
geom_line(stat = 'Summary', fun.y = quantile, fun.args = list(probs = .1), linetype = 2, color = 'blue')
ggplot(data = subset(pf.fc_by_age_months,age_with_months < 70),aes(x = age_with_months,y = friend_count_mean)) +
geom_line()
ggplot(data = pf.fc_by_age,aes(x = age,y = friend_count_mean)) +
geom_line()
View(pf.fc_by_age)
ggplot(data = subset(pf.fc_by_age,age<71),aes(x = age,y = friend_count_mean)) +
geom_line()
p1 <- ggplot(data = subset(pf.fc_by_age,age<71),aes(x = age,y = friend_count_mean)) +
geom_line()
p2 <- ggplot(data = subset(pf.fc_by_age_months,age_with_months < 70),aes(x = age_with_months,y = friend_count_mean)) +
geom_line()
grid.arrange(p2,p1,ncol - 1)
library(gridExtra)
grid.arrange(p2,p1,ncol - 1)
grid.arrange(p2,p1,ncol = 1)
p3 <- ggplot(data = subset(pf.fc_by_age,age<71),aes(x = round(age/5)*5,y = friend_count_mean))+
geom_line(stat = "summary",fun.y=mean)
grid.arrange(p2,p1,p3,ncol = 1)
p1 <- ggplot(data = subset(pf.fc_by_age,age<71),aes(x = age,y = friend_count_mean)) +
geom_line() +
geom_smooth(color = "red")
p2 <- ggplot(data = subset(pf.fc_by_age_months,age_with_months < 70),aes(x = age_with_months,y = friend_count_mean)) +
geom_line() +
geom_smooth(color = "red")
grid.arrange(p2,p1,p3,ncol = 1)
